{"version":3,"sources":["logo.svg","generate.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","num1","num2","base1","base2","operation","answer","score","time","gensols","base","toString","genwsols","Math","floor","random","genrandom","x","positions","getRandomSubarray","allMembers","allMembersFinal","fourRandomMembers","i","sub","console","log","fiveRandomMembers","arr","size","temp","index","shuffled","slice","length","Counter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","clicked","style","buttons","changeState","bind","assertThisInitialized","changeStyle","componentDidMount","setState","correct","counter","error","alert","prevProps","prevState","document","getElementById","innerHTML","number","react_default","a","createElement","container","onClick","id","Component","display","padding","backgroundColor","width","height","cursor","p1","color","App","myVar","setInterval","clearInterval","window","startFunction","arrays","nums","className","App_Counter","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fde3ff9d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\tvar number1;\r\n\tvar number2;\r\n\tvar score=0;\r\n\tvar time=60;\r\n        export var num1;\r\n        export var num2;\r\n        export var base1;\r\n        export var base2;\r\n        export var operation;\r\n        export var op2;\r\n        export var disp1;\r\n        export var disp2;\r\n\t\t\t\texport var answer;\r\n\r\n        export function gensols(answer,base){ //generate solutions\r\n\t\t\t\t\t\t\t\t//alert(\"Fack\");\r\n            return answer.toString(base);\r\n        }\r\n        function genwsols(answer,base){ //generate wrong solutions\r\n            return (answer+Math.floor(Math.random()*5+1)).toString(base);\r\n        }\r\n\r\n        function convert(num1, base1, num2, base2, operation){\r\n\r\n                if(operation==\"+\"){\r\n                        return parseInt(num1,base1)+parseInt(num2,base2);\r\n                }\r\n                else if (operation ==\"-\"){\r\n                        return parseInt(num1,base1)-parseInt(num2,base2);\r\n\r\n                }\r\n                else if(operation ==\"*\"){\r\n                        return parseInt(num1,base1)*parseInt(num2,base2);\r\n\r\n                }\r\n        }\r\n\r\n        export function genrandom(){\r\n\r\n                base1=Math.floor(Math.random()*16+2);\r\n                base2=Math.floor(Math.random()*16+2);\r\n                num1=Math.floor(Math.random()*base1*9+1);\r\n                num2=Math.floor(Math.random()*base2*9+1);\r\n\r\n\r\n                operation=Math.floor(Math.random()*3);\r\n\r\n                if(operation==0){\r\n                        answer = num1+num2;\r\n                        op2=\"+\";\r\n                }\r\n                else if(operation==1){\r\n                        answer = num1-num2;\r\n                        op2=\"-\";\r\n                }\r\n                else{\r\n                        op2=\"*\";\r\n                        answer=num1*num2;\r\n                }\r\n                //answer=convert(num1.toString(base1),base1,num2.toString(base2),base2,op2);\r\n                disp1=num1.toString(base1);\r\n                disp2=num2.toString(base2);\r\n                /*window.alert(num1);\r\n                window.alert(base1);\r\n                window.alert(disp1);\r\n                window.alert(num2);*/\r\n              //  window.alert(answer);\r\n                var x = [2,3,4,5,6,7,8,9,10,11,12,13,14,15];\r\n\t\t\t\t\t\t\t\tvar y = [1,2,3,4,5,6,7,8,9];\r\n\t\t\t\t\t\t\t\tvar positions = getRandomSubarray(y,9);\r\n\r\n\t\t\t\t\t\t\t\t/* Correct Solutions */\r\n\r\n\t\t\t\t\t\t\t\tvar allMembers = [0,0,0,0,0,0,0,0,0];\r\n\t\t\t\t\t\t\t\tvar allMembers1 = [0,0,0,0,0,0,0,0,0];\r\n\t\t\t\t\t\t\t\tvar allMembersFinal = [0,0];\r\n\t\t\t\t\t\t\t\tvar NumCorrect = 4;\r\n                var fourRandomMembers = getRandomSubarray(x, NumCorrect);\r\n\r\n                for(var i=0;i<NumCorrect;i++){\r\n\t\t\t\t\t\t\t\t\t\t\t\t//alert(gensols(answer,fourRandomMembers[i]) + fourRandomMembers[i].toString().sub());\r\n                        allMembers[i]=gensols(answer,fourRandomMembers[i]) + fourRandomMembers[i].toString().sub();\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"it: \" + i);\r\n\r\n                }\r\n\r\n\t\t\t\t\t\t\t\t/* Incorrect Solutions */\r\n                var fiveRandomMembers = getRandomSubarray(x, 9-NumCorrect);\r\n                for(var i=0;i<9-NumCorrect;i++){\r\n                        allMembers[i+NumCorrect] = genwsols(answer,fiveRandomMembers[i])+fiveRandomMembers[i].toString().sub();\r\n                }\r\n\t\t\t\t\t\t\t\tallMembersFinal[0] = positions;\r\n\t\t\t\t\t\t\t\tallMembersFinal[1] = allMembers;\r\n\t\t\t\t\t\t\t\treturn allMembersFinal;\r\n        }\r\n\r\n        function getRandomSubarray(arr, size) {\r\n            var shuffled = arr.slice(0), i = arr.length, temp, index;\r\n            while (i--) {\r\n            index = Math.floor((i + 1) * Math.random());\r\n            temp = shuffled[index];\r\n            shuffled[index] = shuffled[i];\r\n            shuffled[i] = temp;\r\n            }\r\n        return shuffled.slice(0, size);\r\n        }\r\n\r\n\r\n\r\n\texport function startFunction()\r\n\t{\r\n\tvar myVar= setInterval(function(){\r\n\t\t\t\ttime--;\r\n\t\t\t\tvar timeDiv=document.getElementById(\"time\");\r\n\t\t\t\ttimeDiv.innerHTML=time\r\n\t\t\t\tif(time<=0)\r\n\t\t\t\t{\r\n\t\t\t\t\tclearInterval(myVar);\r\n\t\t\t\t\twindow.alert(\"Your score is: \"+score);\r\n\t\t\t\t}\r\n\r\n\t\t},1000);\r\n\t}\r\n\r\n\t\texport function addFunction(){\r\n\t\t\tif(num1==null)\r\n\t\t\t{\r\n\t\t\tgenrandom();\r\n\t\t\t//alert(\"Fack\");\r\n\t\t\tdocument.getElementById(\"p1\").innerHTML = this.disp1+' '+this.base1.toString().sub()+\" \"+op2+' '+this.disp2+' '+this.base2.toString().sub();\r\n\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(parseInt(document.getElementById(\"answer\").value)==answer)\r\n\t\t\t\t{\r\n\r\n      genrandom();\r\n\t\t\tdocument.getElementById(\"p1\").innerHTML = this.disp1+' '+this.base1.toString().sub()+\" \"+op2+' '+this.disp2+' '+this.base2.toString().sub();\r\n\t\t\tscore=score+1;\r\n\t\t\tdocument.getElementById(\"score\").innerHTML=score.toString();\r\n\t\t\tclearbox()\r\n\r\n\t\t}\r\n\r\n\t\t}\r\n\t\t}\r\n\t\t/*function yesFunction(){\r\n\t\t\tscore=0;\r\n\t\t\ttime=30\r\n\t\t\tvar timeDiv=document.getElementById(\"time\");\r\n\t\t\t\ttimeDiv.innerHTML=time\r\n\t\t\tdocument.getElementById(\"score\").innerHTML=score.toString();\r\n\t\t\tnumber1=null;\r\n\t\t\tnumber2=null;\r\n\t\t\t\tstartFunction();\r\n\t\t\t\taddFunction();\r\n\r\n\t\t}*/\r\n\t\tfunction clearbox(){\r\n\t\t\tdocument.getElementById(\"answer\").value=\"\";\r\n\t\t}\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {num1, num2, base1, base2, operation, op2, disp1, disp2, answer, startFunction, addFunction, genrandom, gensols} from './generate.js';\n\nvar arrs = genrandom();\n\nclass Counter extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            clicked: 0,\n            style: style.buttons,\n            random: \"id=\" + Math.floor(Math.random()*1000000000)\n        }\n        this.changeState = this.changeState.bind(this);\n        this.changeStyle = this.changeStyle.bind(this);\n        this.componentDidMount = this.componentDidMount.bind(this);\n\n    }\n\n    changeState(){\n      this.setState( () => {\n        return { clicked: 1 }\n      });\n\n      if(this.props.correct == true){\n        this.setState( () => {\n          return { style: style.counter }\n        }); }\n      else if(this.props.correct == false){\n          this.setState( () => {\n            return { style: style.error }\n        }); }\n    }\n\n      changeStyle(){\n        alert(\"SUCK ME OFF\");\n        if(this.state.clicked == 1 && this.props.correct == 1){\n          this.setState( () => {\n            return { style: style.buttons }\n          }); }\n        else if(this.state.clicked == 1 && this.props.correct == 0){\n          this.setState( () => {\n            return { style: style.error }\n          });\n        }\n        else {\n          this.setState( () => {\n            return { style: style.counter }\n          });\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState){ //ie. onClick\n        //This will be called after the component is updated\n        //Remember component can only be updated when the state changes\n        //or the props changes\n        if(this.props.correct == 1){\n          //alert(gensols(20,2));\n          //alert(\"good job!\");\n        }\n        if(true){\n\n        }\n        if(this.props.correct == 0){\n          //alert(\"bad job!\");\n          //FAIL\n        }\n    }\n\n    componentDidMount(){\n        document.getElementById(this.state.random).innerHTML = this.props.number;\n        //alert(this.props.id + \" \" + this.props.number);\n    }\n\n    render() {\n        //{this.state.clicked}\n        //if(this.states.clicked == 1 && this.props.correct == 0){}\n        return (\n            <div style={style.container}>\n                <div style={this.state.style}\n                     onClick={this.changeState}>\n                {<p id={this.state.random}></p>}\n                </div>\n            </div>\n        );\n    }\n}\nconst style = {\n    container: {\n        display: 'flex'\n    },\n    buttons: {\n        padding: `0px 7px 0px 7px`,\n        backgroundColor: 'grey',\n        width: 200,\n        height:80,\n        cursor: 'pointer'\n    },\n    counter: {\n        padding: `0px 7px 0px 7px`\n    },\n    error: {\n        padding: `0px 7px 0px 7px`,\n        backgroundColor: '#ea3c54'\n    },\n    p1: {\n      color: 'red',\n      width: 200\n    }\n\n}\n\nclass App extends Component {\n  componentDidMount () {\n    startFunction();\n    }\n\n  render() {\n    var arrays = genrandom();\n    window.positions = arrays[0];\n    window.nums = arrays[1];\n\n    return (\n\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p id=\"p1\"></p>\n          <p id=\"time\"></p>\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <Counter id =\"1\" number={window.nums[window.positions[0]]} correct={window.positions[0]<4}/>\n          <Counter id =\"2\" number={window.nums[window.positions[1]]} correct={window.positions[1]<4}/>\n          <Counter id =\"3\" number={window.nums[window.positions[2]]} correct={window.positions[2]<4}/>\n          <Counter id =\"4\" number={window.nums[window.positions[3]]} correct={window.positions[3]<4}/>\n          <Counter id =\"5\" number={window.nums[window.positions[4]]} correct={window.positions[4]<4}/>\n          <Counter id =\"6\" number={window.nums[window.positions[5]]} correct={window.positions[5]<4}/>\n          <Counter id =\"7\" number={window.nums[window.positions[6]]} correct={window.positions[6]<4}/>\n          <Counter id =\"8\" number={window.nums[window.positions[7]]} correct={window.positions[7]<4}/>\n          <Counter id =\"9\" number={window.nums[window.positions[8]]} correct={window.positions[8]<4}/>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}